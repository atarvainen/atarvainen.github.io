{"version":3,"sources":["Info.js","Projects.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["Info","react_default","a","createElement","className","Component","photos","src","width","height","Project","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","currentImage","closeLightbox","bind","assertThisInitialized","openLightbox","gotoNext","gotoPrevious","event","obj","setState","index","lightboxIsOpen","href","target","rel","react_photo_gallery_esm","onClick","Lightbox_default","images","onClose","onClickPrev","onClickNext","isOpen","Contact","class","id","action","method","type","name","placeholder","value","App","props","showInfo","showProjects","showContact","toggleInfo","toggleProjects","toggleContact","alt","src_Info","Projects","src_Contact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.033af47d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Info extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Info\">\r\n          <h1>\r\n            About me\r\n          </h1>\r\n          <p>\r\n            Currently a second year student at JAMK.\r\n          </p>\r\n          <p>\r\n            Formerly a printing press operator and now pursuing a career in software engineering.\r\n          </p>\r\n          <p>\r\n            On my spare time I do some woodworking, PC modding and work on my speaker setup.\r\n          </p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Info;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Gallery from 'react-photo-gallery';\r\nimport Lightbox from 'react-images';\r\n\r\nconst photos = [\r\n  { src: '1.jpg', width: 4, height: 3 },\r\n  { src: '2.jpg', width: 1, height: 1 },\r\n  { src: '3.jpg', width: 3, height: 4 },\r\n  { src: '4.jpg', width: 3, height: 4 },\r\n];\r\n\r\nclass Project extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { currentImage: 0 };\r\n    this.closeLightbox = this.closeLightbox.bind(this);\r\n    this.openLightbox = this.openLightbox.bind(this);\r\n    this.gotoNext = this.gotoNext.bind(this);\r\n    this.gotoPrevious = this.gotoPrevious.bind(this);\r\n  }\r\n  openLightbox(event, obj) {\r\n    this.setState({\r\n      currentImage: obj.index,\r\n      lightboxIsOpen: true,\r\n    });\r\n  }\r\n  closeLightbox() {\r\n    this.setState({\r\n      currentImage: 0,\r\n      lightboxIsOpen: false,\r\n    });\r\n  }\r\n  gotoPrevious() {\r\n    this.setState({\r\n      currentImage: this.state.currentImage - 1,\r\n    });\r\n  }\r\n  gotoNext() {\r\n    this.setState({\r\n      currentImage: this.state.currentImage + 1,\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"Info\">\r\n        <h2>\r\n          Most of my projects are at my <a href=\"https://github.com/atarvainen\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>.\r\n        </h2>\r\n        <h3>\r\n          Custom watercooling loop.\r\n        </h3>\r\n        <Gallery photos={photos} onClick={this.openLightbox} />\r\n        <Lightbox images={photos}\r\n          onClose={this.closeLightbox}\r\n          onClickPrev={this.gotoPrevious}\r\n          onClickNext={this.gotoNext}\r\n          currentImage={this.state.currentImage}\r\n          isOpen={this.state.lightboxIsOpen}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Project;","import React, { Component } from 'react';\r\nimport './App.css';\r\n\r\nclass Contact extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"Info\">\r\n        <div class=\"textbox2\">\r\n          <h2>Contact me:</h2>\r\n          <table>\r\n            <tbody>\r\n              <tr>\r\n                <td>Phone:</td><td>045 896 8690</td>\r\n              </tr>\r\n              <tr>\r\n                <td>E-mail:</td><td>anttigt@gmail.com</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <h2>Or use this form:</h2>\r\n        <div id=\"lomake\" class=\"textbox\">\r\n          <div class=\"container\">\r\n            <form action=\"https://formspree.io/anttigt@gmail.com\" method=\"POST\">\r\n              <div class=\"row\">\r\n                <div class=\"col-75\">\r\n                  <input type=\"text\" id=\"nimi\" name=\"name\" placeholder=\"Nimesi..\" />\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-75\">\r\n                  <textarea id=\"viesti\" name=\"nimi\" placeholder=\"Kirjoita jotain..\"></textarea>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <input type=\"submit\" value=\"Send\" />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Info from './Info';\r\nimport Projects from './Projects';\r\nimport Contact from './Contact';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        showInfo: true,\r\n        showProjects: false,\r\n        showContact: false,\r\n    }\r\n\r\n    this.toggleInfo = this.toggleInfo.bind(this);\r\n    this.toggleProjects = this.toggleProjects.bind(this);\r\n    this.toggleContact = this.toggleContact.bind(this);\r\n  }\r\n\r\n  toggleInfo() {\r\n    this.setState({\r\n      showInfo: true,\r\n      showProjects: false,\r\n      showContact: false\r\n    });\r\n  }\r\n\r\n  toggleProjects() {\r\n    this.setState({\r\n      showProjects: true,\r\n      showInfo: false,\r\n      showContact: false\r\n    });\r\n  }\r\n\r\n  toggleContact() {\r\n    this.setState({\r\n      showContact: true,\r\n      showProjects: false,\r\n      showInfo: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src=\"face.png\" className=\"App-logo\" alt=\"logo\" />\r\n          <div className=\"links\">\r\n            <button className=\"Site-links\" onClick={this.toggleInfo}>Info<img src=\"info.png\" className=\"Button-logo\" alt=\"logo\" /></button>\r\n            <button className=\"Site-links\" onClick={this.toggleProjects}>Projects<img src=\"info.png\" className=\"Button-logo\" alt=\"logo\" /></button>\r\n            <button className=\"Site-links\" onClick={this.toggleContact}>Contact<img src=\"contact.png\" className=\"Button-logo\" alt=\"logo\" /></button>\r\n            <a href='https://github.com/atarvainen' target=\"_blank\" rel=\"noopener noreferrer\"><button className=\"Social-logo\"><img src=\"GitHub-Mark-64px.png\" className=\"social\" alt=\"GH\" /></button></a>\r\n            <a href='https://www.linkedin.com/in/antti-tarvainen/' target=\"_blank\" rel=\"noopener noreferrer\"><button className=\"Social-logo\"><img src=\"linkedin.png\" className=\"social\" alt=\"LI\" /></button></a>\r\n          </div>\r\n        </header>\r\n        {this.state.showInfo ?\r\n          <Info />\r\n          : null\r\n        }\r\n\r\n        {this.state.showProjects ?\r\n          <Projects />            \r\n          : null\r\n        }\r\n\r\n        {this.state.showContact ?\r\n          <Contact />            \r\n          : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}