{"version":3,"sources":["Menu.js","Info.js","Projects.js","Contact.js","App.js","serviceWorker.js","index.js"],"names":["Menu","react_default","a","createElement","className","md","onClick","this","props","toggleMenu","showHome","showProjects","showContact","Component","Info","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","showMenu","state","react_transition_group","transitionName","transitionAppear","transitionEnterTimeout","transitionLeaveTimeout","transitionEnter","transitionLeave","src_Menu","toggleInfo","toggleProjects","toggleContact","photos","src","width","height","Project","currentImage","closeLightbox","bind","assertThisInitialized","openLightbox","gotoNext","gotoPrevious","event","obj","index","lightboxIsOpen","href","target","rel","react_photo_gallery_esm","Lightbox_default","images","onClose","onClickPrev","onClickNext","isOpen","Contact","class","action","method","type","id","name","placeholder","value","App","showInfo","src_Info","Projects","src_Contact","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.96508272.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { MdClose } from 'react-icons/md';\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"menu\">\r\n        <div className=\"menuClose\">\r\n          <MdClose onClick={this.props.toggleMenu} />\r\n        </div>\r\n        <p onClick={this.props.showHome}>Home</p>\r\n        <p onClick={this.props.showProjects}>Projects</p>\r\n        <p onClick={this.props.showContact}>Contact</p>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Menu from './Menu.js';\r\nimport { MdMenu } from 'react-icons/md';\r\n//import { IoLogoTwitter } from 'react-icons/io';\r\nimport { CSSTransitionGroup } from 'react-transition-group'\r\n\r\nclass Info extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMenu: false,\r\n    }\r\n  }\r\n\r\n  toggleMenu = () => {\r\n    this.setState({ showMenu: !this.state.showMenu })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Info\">\r\n        <CSSTransitionGroup\r\n          transitionName=\"menu\"\r\n          transitionAppear={false}\r\n          transitionEnterTimeout={200}\r\n          transitionLeaveTimeout={200}\r\n          transitionEnter={true}\r\n          transitionLeave={true}>\r\n          {this.state.showMenu ?\r\n            <Menu toggleMenu={this.toggleMenu}\r\n                  showHome={this.props.toggleInfo}\r\n                  showProjects={this.props.toggleProjects}\r\n                  showContact={this.props.toggleContact}/>\r\n            :\r\n            null\r\n          }\r\n        </CSSTransitionGroup>\r\n        <div className=\"Title\">\r\n          About me\r\n          {this.state.showMenu ?\r\n            null\r\n          :\r\n            < MdMenu onClick={this.toggleMenu} />\r\n          }\r\n        </div>\r\n        <div className=\"textBox\">\r\n          <p>\r\n            Currently a second year student at JAMK.\r\n          </p>\r\n          <p>\r\n            Formerly a printing press operator and now pursuing a career in software engineering.\r\n          </p>\r\n          <p>\r\n            On my spare time I would do woodworking, PC modding or work on my speaker setup but currently schoolwork is taking most of my time.\r\n          </p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Info;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Gallery from 'react-photo-gallery';\r\nimport Lightbox from 'react-images';\r\nimport Menu from './Menu.js'\r\nimport { MdMenu } from 'react-icons/md';\r\nimport { CSSTransitionGroup } from 'react-transition-group'\r\n\r\nconst photos = [\r\n  { src: '1.jpg', width: 1, height: 1 },\r\n  { src: '2.jpg', width: 1, height: 2 },\r\n  { src: '3.jpg', width: 2, height: 1 },\r\n  { src: '4.jpg', width: 2, height: 1 },\r\n];\r\n\r\nclass Project extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { \r\n      currentImage: 0,\r\n      showMenu: false,\r\n    };\r\n    this.closeLightbox = this.closeLightbox.bind(this);\r\n    this.openLightbox = this.openLightbox.bind(this);\r\n    this.gotoNext = this.gotoNext.bind(this);\r\n    this.gotoPrevious = this.gotoPrevious.bind(this);\r\n  }\r\n\r\n  toggleMenu = () => {\r\n    this.setState({ showMenu: !this.state.showMenu })\r\n  }\r\n  \r\n  openLightbox(event, obj) {\r\n    this.setState({\r\n      currentImage: obj.index,\r\n      lightboxIsOpen: true,\r\n      showMenu: false,\r\n    });\r\n  }\r\n\r\n  closeLightbox() {\r\n    this.setState({\r\n      currentImage: 0,\r\n      lightboxIsOpen: false,\r\n    });\r\n  }\r\n\r\n  gotoPrevious() {\r\n    this.setState({\r\n      currentImage: this.state.currentImage - 1,\r\n    });\r\n  }\r\n\r\n  gotoNext() {\r\n    this.setState({\r\n      currentImage: this.state.currentImage + 1,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Info\">\r\n        <CSSTransitionGroup\r\n          transitionName=\"menu\"\r\n          transitionAppear={false}\r\n          transitionEnterTimeout={200}\r\n          transitionLeaveTimeout={200}\r\n          transitionEnter={true}\r\n          transitionLeave={true}>\r\n          {this.state.showMenu ?\r\n            <Menu toggleMenu={this.toggleMenu}\r\n                  showHome={this.props.toggleInfo}\r\n                  showProjects={this.props.toggleProjects}\r\n                  showContact={this.props.toggleContact}/>\r\n            :\r\n            null\r\n          }\r\n        </CSSTransitionGroup>\r\n        <div className=\"Title\">\r\n          Projects\r\n          {this.state.showMenu ?\r\n            null\r\n          :\r\n            < MdMenu onClick={this.toggleMenu} />\r\n          }\r\n        </div>\r\n        <div className=\"textBox\">\r\n          <p>\r\n            Most of my projects are at my <a href=\"https://github.com/atarvainen\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>.\r\n          </p>\r\n          <p>\r\n            But here is my old watercooling loop for you.\r\n          </p>\r\n          <Gallery photos={photos} onClick={this.openLightbox} />\r\n          <Lightbox images={photos}\r\n            onClose={this.closeLightbox}\r\n            onClickPrev={this.gotoPrevious}\r\n            onClickNext={this.gotoNext}\r\n            currentImage={this.state.currentImage}\r\n            isOpen={this.state.lightboxIsOpen}\r\n            width={1024}\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Project;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Menu from './Menu.js'\r\nimport { MdMenu } from 'react-icons/md';\r\nimport { CSSTransitionGroup } from 'react-transition-group'\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showMenu: false,\r\n    }\r\n  }\r\n\r\n  toggleMenu = () => {\r\n    this.setState({ showMenu: !this.state.showMenu })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Info\">\r\n        <CSSTransitionGroup\r\n          transitionName=\"menu\"\r\n          transitionAppear={false}\r\n          transitionEnterTimeout={200}\r\n          transitionLeaveTimeout={200}\r\n          transitionEnter={true}\r\n          transitionLeave={true}>\r\n          {this.state.showMenu ?\r\n            <Menu toggleMenu={this.toggleMenu}\r\n              showHome={this.props.toggleInfo}\r\n              showProjects={this.props.toggleProjects}\r\n              showContact={this.props.toggleContact} />\r\n            :\r\n            null\r\n          }\r\n        </CSSTransitionGroup>\r\n        <div className=\"Title\">\r\n          Contact me\r\n        {this.state.showMenu ?\r\n            null\r\n            :\r\n            < MdMenu onClick={this.toggleMenu} />\r\n          }\r\n        </div>\r\n        <div className=\"textBox\">\r\n          <div class=\"textbox2\">\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <td>Phone:</td><td>045 896 8690</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>E-mail:</td><td>anttigt@gmail.com</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <p>Or use this form</p>\r\n          <div className=\"formContainer\">\r\n            <form action=\"https://formspree.io/anttigt@gmail.com\" method=\"POST\">\r\n              <div class=\"row\">\r\n                <div class=\"col-75\">\r\n                  <input type=\"text\" id=\"nimi\" name=\"Name\" placeholder=\"Your name\" />\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-75\">\r\n                  <textarea id=\"viesti\" name=\"Message\" placeholder=\"Write something\"></textarea>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <input type=\"submit\" value=\"Send\" />\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Info from './Info';\r\nimport Projects from './Projects';\r\nimport Contact from './Contact';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        showInfo: true,\r\n        showProjects: false,\r\n        showContact: false,\r\n    }\r\n\r\n    this.toggleInfo = this.toggleInfo.bind(this);\r\n    this.toggleProjects = this.toggleProjects.bind(this);\r\n    this.toggleContact = this.toggleContact.bind(this);\r\n  }\r\n\r\n  toggleInfo() {\r\n    this.setState({\r\n      showInfo: true,\r\n      showProjects: false,\r\n      showContact: false\r\n    });\r\n  }\r\n\r\n  toggleProjects() {\r\n    this.setState({\r\n      showProjects: true,\r\n      showInfo: false,\r\n      showContact: false\r\n    });\r\n  }\r\n\r\n  toggleContact() {\r\n    this.setState({\r\n      showContact: true,\r\n      showProjects: false,\r\n      showInfo: false\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      {this.state.showInfo ?\r\n        <Info toggleInfo={this.toggleInfo} toggleProjects={this.toggleProjects} toggleContact={this.toggleContact}/>\r\n        : null\r\n      }\r\n\r\n      {this.state.showProjects ?\r\n        <Projects toggleInfo={this.toggleInfo} toggleProjects={this.toggleProjects} toggleContact={this.toggleContact}/>\r\n        : null\r\n      }\r\n\r\n      {this.state.showContact ?\r\n        <Contact toggleInfo={this.toggleInfo} toggleProjects={this.toggleProjects} toggleContact={this.toggleContact}/>\r\n        : null\r\n      }\r\n    </div>\r\n    );\r\n  }\r\n\r\n  /*\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <header className=\"App-header\">\r\n          <img src=\"face.png\" className=\"App-logo\" alt=\"logo\" />\r\n          <div className=\"links\">\r\n            <button className=\"Site-links\" onClick={this.toggleInfo}>Info<img src=\"info.png\" className=\"Button-logo\" alt=\"logo\" /></button>\r\n            <button className=\"Site-links\" onClick={this.toggleProjects}>Projects<img src=\"info.png\" className=\"Button-logo\" alt=\"logo\" /></button>\r\n            <button className=\"Site-links\" onClick={this.toggleContact}>Contact<img src=\"contact.png\" className=\"Button-logo\" alt=\"logo\" /></button>\r\n            <a href='https://github.com/atarvainen' target=\"_blank\" rel=\"noopener noreferrer\"><button className=\"Social-logo\"><img src=\"GitHub-Mark-64px.png\" className=\"social\" alt=\"GH\" /></button></a>\r\n            <a href='https://www.linkedin.com/in/antti-tarvainen/' target=\"_blank\" rel=\"noopener noreferrer\"><button className=\"Social-logo\"><img src=\"linkedin.png\" className=\"social\" alt=\"LI\" /></button></a>\r\n          </div>\r\n        </header>\r\n        {this.state.showInfo ?\r\n          <Info />\r\n          : null\r\n        }\r\n\r\n        {this.state.showProjects ?\r\n          <Projects />\r\n          : null\r\n        }\r\n\r\n        {this.state.showContact ?\r\n          <Contact />\r\n          : null\r\n        }\r\n      </div>\r\n    );\r\n  }\r\n  */\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}